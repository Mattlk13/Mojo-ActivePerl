.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.31)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Locale::Codes::LangVar 3"
.TH Locale::Codes::LangVar 3 "2015-06-01" "perl v5.22.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Locale::Codes::LangVar \- standard codes for language variation identification
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&   use Locale::Codes::LangVar;
\&
\&   $lvar = code2langvar(\*(Aqacm\*(Aq);                 # $lvar gets \*(AqMesopotamian Arabic\*(Aq
\&   $code = langvar2code(\*(AqMesopotamian Arabic\*(Aq); # $code gets \*(Aqacm\*(Aq
\&
\&   @codes   = all_langvar_codes();
\&   @names   = all_langvar_names();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides access to standard codes
used for identifying language variations, such as those as defined in
the \s-1IANA\s0 language registry.
.PP
Most of the routines take an optional additional argument which
specifies the code set to use. If not specified, the default \s-1IANA\s0
language registry codes will be used.
.SH "SUPPORTED CODE SETS"
.IX Header "SUPPORTED CODE SETS"
There are several different code sets you can use for identifying
language variations. A code set may be specified using either a name, or a
constant that is automatically exported by this module.
.PP
For example, the two are equivalent:
.PP
.Vb 2
\&   $lvar = code2langvar(\*(Aqarevela\*(Aq,\*(Aqalpha\*(Aq);
\&   $lvar = code2langvar(\*(Aqarevela\*(Aq,LOCALE_LANGVAR_ALPHA);
.Ve
.PP
The codesets currently supported are:
.IP "\fBalpha\fR" 4
.IX Item "alpha"
This is the set of alphanumeric codes from the \s-1IANA\s0
language registry, such as 'arevela' for Eastern Armenian.
.Sp
This code set is identified with the symbol \f(CW\*(C`LOCALE_LANGVAR_ALPHA\*(C'\fR.
.Sp
This is the default code set.
.SH "ROUTINES"
.IX Header "ROUTINES"
.IP "\fBcode2langvar(\s-1CODE\s0 [,CODESET] [,'retired'])\fR" 4
.IX Item "code2langvar(CODE [,CODESET] [,'retired'])"
.PD 0
.IP "\fBlangvar2code(\s-1NAME\s0 [,CODESET] [,'retired'])\fR" 4
.IX Item "langvar2code(NAME [,CODESET] [,'retired'])"
.IP "\fBlangvar_code2code(\s-1CODE ,CODESET ,CODESET2\s0)\fR" 4
.IX Item "langvar_code2code(CODE ,CODESET ,CODESET2)"
.IP "\fBall_langvar_codes([\s-1CODESET\s0] [,'retired'])\fR" 4
.IX Item "all_langvar_codes([CODESET] [,'retired'])"
.IP "\fBall_langvar_names([\s-1CODESET\s0] [,'retired'])\fR" 4
.IX Item "all_langvar_names([CODESET] [,'retired'])"
.IP "\fBLocale::Codes::LangVar::rename_langvar(\s-1CODE ,NEW_NAME\s0 [,CODESET])\fR" 4
.IX Item "Locale::Codes::LangVar::rename_langvar(CODE ,NEW_NAME [,CODESET])"
.IP "\fBLocale::Codes::LangVar::add_langvar(\s-1CODE ,NAME\s0 [,CODESET])\fR" 4
.IX Item "Locale::Codes::LangVar::add_langvar(CODE ,NAME [,CODESET])"
.IP "\fBLocale::Codes::LangVar::delete_langvar(\s-1CODE\s0 [,CODESET])\fR" 4
.IX Item "Locale::Codes::LangVar::delete_langvar(CODE [,CODESET])"
.IP "\fBLocale::Codes::LangVar::add_langvar_alias(\s-1NAME ,NEW_NAME\s0)\fR" 4
.IX Item "Locale::Codes::LangVar::add_langvar_alias(NAME ,NEW_NAME)"
.IP "\fBLocale::Codes::LangVar::delete_langvar_alias(\s-1NAME\s0)\fR" 4
.IX Item "Locale::Codes::LangVar::delete_langvar_alias(NAME)"
.IP "\fBLocale::Codes::LangVar::rename_langvar_code(\s-1CODE ,NEW_CODE\s0 [,CODESET])\fR" 4
.IX Item "Locale::Codes::LangVar::rename_langvar_code(CODE ,NEW_CODE [,CODESET])"
.IP "\fBLocale::Codes::LangVar::add_langvar_code_alias(\s-1CODE ,NEW_CODE\s0 [,CODESET])\fR" 4
.IX Item "Locale::Codes::LangVar::add_langvar_code_alias(CODE ,NEW_CODE [,CODESET])"
.IP "\fBLocale::Codes::LangVar::delete_langvar_code_alias(\s-1CODE\s0 [,CODESET])\fR" 4
.IX Item "Locale::Codes::LangVar::delete_langvar_code_alias(CODE [,CODESET])"
.PD
These routines are all documented in the Locale::Codes::API man page.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "Locale::Codes" 4
.IX Item "Locale::Codes"
The Locale-Codes distribution.
.IP "Locale::Codes::API" 4
.IX Item "Locale::Codes::API"
The list of functions supported by this module.
.IP "<http://www.iana.org/assignments/language\-subtag\-registry>" 4
.IX Item "<http://www.iana.org/assignments/language-subtag-registry>"
The \s-1IANA\s0 language subtag registry.
.SH "AUTHOR"
.IX Header "AUTHOR"
See Locale::Codes for full author history.
.PP
Currently maintained by Sullivan Beck (sbeck@cpan.org).
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
.Vb 1
\&   Copyright (c) 2011\-2015 Sullivan Beck
.Ve
.PP
This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
