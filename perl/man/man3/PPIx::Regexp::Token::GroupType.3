.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PPIx::Regexp::Token::GroupType 3"
.TH PPIx::Regexp::Token::GroupType 3 "2015-10-31" "perl v5.22.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PPIx::Regexp::Token::GroupType \- Represent a grouping parenthesis type.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\& use PPIx::Regexp::Dumper;
\& PPIx::Regexp::Dumper\->new( \*(Aqqr{(?i:foo)}smx\*(Aq )
\&     \->print();
.Ve
.SH "INHERITANCE"
.IX Header "INHERITANCE"
\&\f(CW\*(C`PPIx::Regexp::Token::GroupType\*(C'\fR is a
PPIx::Regexp::Token.
.PP
\&\f(CW\*(C`PPIx::Regexp::Token::GroupType\*(C'\fR is the parent of
PPIx::Regexp::Token::GroupType::Assertion,
PPIx::Regexp::Token::GroupType::BranchReset,
PPIx::Regexp::Token::GroupType::Code,
PPIx::Regexp::Token::GroupType::Modifier,
PPIx::Regexp::Token::GroupType::NamedCapture,
PPIx::Regexp::Token::GroupType::Subexpression
and
PPIx::Regexp::Token::GroupType::Switch.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class represents any of the magic sequences of characters that can
follow an open parenthesis. This particular class is intended to be
abstract.
.SH "METHODS"
.IX Header "METHODS"
This class provides no public methods beyond those provided by its
superclass.
.SS "_\|_defining_string"
.IX Subsection "__defining_string"
.Vb 1
\& my $string = $class\->_\|_defining_string();
.Ve
.PP
This method is private to the \f(CW\*(C`PPIx\-Regexp\*(C'\fR package, and is documented
for the author's benefit only. It may be changed or revoked without
notice.
.PP
This method returns an array of strings that define the specific group
type.  These strings will normally start with \f(CW\*(Aq?\*(Aq\fR.
.PP
Optionally, the first returned item may be a hash reference. The only
supported key is \f(CW\*(C`{suffix}\*(C'\fR, which is a string to be suffixed to each
of the regular expressions made by \f(CW\*(C`_\|_make_group_type_matcher()\*(C'\fR out of
the defining strings, inside a \f(CW\*(C`(?= ... )\*(C'\fR, so that it is not included
in the match.
.PP
This method \fBmust\fR be overridden, unless \f(CW\*(C`_\|_make_group_type_matcher()\*(C'\fR
is. The override \fBmust\fR return the same thing each time, since the
results of \f(CW\*(C`_\|_make_group_type_matcher()\*(C'\fR are cached.
.SS "_\|_make_group_type_matcher"
.IX Subsection "__make_group_type_matcher"
.Vb 1
\& my $hash_ref = $class\->_\|_make_group_type_matcher();
.Ve
.PP
This method is private to the \f(CW\*(C`PPIx\-Regexp\*(C'\fR package, and is documented
for the author's benefit only. It may be changed or revoked without
notice.
.PP
This method returns a reference to a hash. The keys are regexp delimiter
characters which appear in the defining strings for the group type. For
each key, the value is a reference to an array of \f(CW\*(C`Regexp\*(C'\fR objects,
properly escaped for the key character. Key \f(CW\*(Aq\*(Aq\fR provides the regular
expressions to be used if the regexp delimiter does not appear in any of
the defining strings.
.PP
If this method is overridden by the subclass, method
\&\f(CW\*(C`_\|_defining_string()\*(C'\fR need not be, unless the overridden
\&\f(CW\*(C`_\|_make_group_type_matcher()\*(C'\fR calls \f(CW\*(C`_\|_defining_string()\*(C'\fR.
.SS "_\|_match_setup"
.IX Subsection "__match_setup"
.Vb 1
\& $class\->_\|_match_setup( $tokenizer );
.Ve
.PP
This method is private to the \f(CW\*(C`PPIx\-Regexp\*(C'\fR package, and is documented
for the author's benefit only. It may be changed or revoked without
notice.
.PP
This method performs whatever setup is needed once it is determined that
the given group type has been detected.  This method is called only if
the class matched at the current position in the string being parsed. It
must perform whatever extra setup is needed for the match. It returns
nothing.
.PP
This method need not be overridden. The default does nothing.
.SH "SUPPORT"
.IX Header "SUPPORT"
Support is by the author. Please file bug reports at
<http://rt.cpan.org>, or in electronic mail to the author.
.SH "AUTHOR"
.IX Header "AUTHOR"
Thomas R. Wyant, \s-1III \s0\fIwyant at cpan dot org\fR
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2009\-2015 by Thomas R. Wyant, \s-1III\s0
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl 5.10.0. For more details, see the full text
of the licenses in the directory \s-1LICENSES.\s0
.PP
This program is distributed in the hope that it will be useful, but
without any warranty; without even the implied warranty of
merchantability or fitness for a particular purpose.
