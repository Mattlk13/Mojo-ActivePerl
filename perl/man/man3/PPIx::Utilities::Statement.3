.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PPIx::Utilities::Statement 3"
.TH PPIx::Utilities::Statement 3 "2010-12-01" "perl v5.22.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PPIx::Utilities::Statement \- Extensions to PPI::Statement.
.SH "VERSION"
.IX Header "VERSION"
This document describes PPIx::Utilities::Statement version 1.1.0.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use PPI::Document qw< >;
\&
\&    use PPIx::Utilities::Statement qw<
\&        get_constant_name_elements_from_declaring_statement
\&    >;
\&
\&    my $document = PPI::Document\->new(\e\*(AqReadonly::Scalar my $THINGY => 47.2;\*(Aq);
\&
\&    # Returns the PPI::Token::Symbol for "$THINGY".
\&    my ($constant) = get_constant_name_elements_from_declaring_statement(
\&        $document\->schild(0)
\&    );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a collection of functions for dealing with
PPI::Statements.
.SH "INTERFACE"
.IX Header "INTERFACE"
Nothing is exported by default.
.ie n .SS """get_constant_name_elements_from_declaring_statement($statement)"""
.el .SS "\f(CWget_constant_name_elements_from_declaring_statement($statement)\fP"
.IX Subsection "get_constant_name_elements_from_declaring_statement($statement)"
Given a PPI::Statement, if the statement is a
Readonly or Const::Fast declaration statement or a
\&\f(CW\*(C`use constant\*(C'\fR, returns the names of the things being defined.
.PP
Given
.PP
.Vb 1
\&    use constant 1.16 FOO => \*(Aqbar\*(Aq;
.Ve
.PP
this will return the PPI::Token::Word containing \f(CW\*(AqFOO\*(Aq\fR.
Given
.PP
.Vb 1
\&    use constant 1.16 { FOO => \*(Aqbar\*(Aq, \*(AqBAZ\*(Aq => \*(Aqburfle\*(Aq };
.Ve
.PP
this will return a list of the PPI::Tokens containing \f(CW\*(AqFOO\*(Aq\fR
and \f(CW\*(AqBAZ\*(Aq\fR. Similarly, given
.PP
.Vb 1
\&    Readonly::Hash my %FOO => ( bar => \*(Aqbaz\*(Aq );
.Ve
.PP
or
.PP
.Vb 1
\&    const my %FOO => ( bar => \*(Aqbaz\*(Aq );
.Ve
.PP
this will return the PPI::Token::Symbol containing
\&\f(CW\*(Aq%FOO\*(Aq\fR.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs or feature requests to
\&\f(CW\*(C`bug\-ppix\-utilities@rt.cpan.org\*(C'\fR, or through the web interface at
<http://rt.cpan.org>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Thomas R. Wyant, \s-1III \s0\f(CW\*(C`<wyant at cpan dot org>\*(C'\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2009\-2010 Thomas R. Wyant, \s-1III. \s0 All rights reserved.
.PP
This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.  The full text of this license
can be found in the \s-1LICENSE\s0 file included with this module.
